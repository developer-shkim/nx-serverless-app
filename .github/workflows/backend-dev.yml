name: Backend Dev

on:
  push:
    branches:
      - test-main
    paths:
      - 'stacks/my-nest-app'
      - '.github/workflows/backend-dev.yml'

env:
  AWS_DEFAULT_REGION: ap-northeast-2
  AWS_ACCESS_KEY_ID: ${{ secrets.DEV_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }}
  NODE_OPTIONS: --max_old_space_size=4096

concurrency: backend-dev

defaults:
  run:
    working-directory: stacks/my-nest-app

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Restore dependencies from cache
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-backend-yarn-${{ hashFiles(format('{0}{1}', github.workspace, 'yarn.lock')) }}
          restore-keys: |
            ${{ runner.os }}-backend-yarn-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

  lint:
    runs-on: ubuntu-latest
    needs: [install-dependencies]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Restore dependencies from cache
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-backend-yarn-${{ hashFiles(format('{0}{1}', github.workspace, 'yarn.lock')) }}
          restore-keys: |
            ${{ runner.os }}-backend-yarn-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Lint
        run: yarn lint

  unit-testing:
    runs-on: ubuntu-latest
    needs: [install-dependencies]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Restore dependencies from cache
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-backend-yarn-${{ hashFiles(format('{0}{1}', github.workspace, 'yarn.lock')) }}
          restore-keys: |
            ${{ runner.os }}-backend-yarn-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Unit testing
        run: yarn test --ci --coverage --passWithNoTests

      - name: Upload test coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: backend

  e2e-testing:
    runs-on: ubuntu-latest
    needs: [install-dependencies]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Restore dependencies from cache
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-backend-yarn-${{ hashFiles(format('{0}{1}', github.workspace, 'yarn.lock')) }}
          restore-keys: |
            ${{ runner.os }}-backend-yarn-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: E2E testing
        run: |
          yarn test:e2e \
            --runInBand \
            --ci \
            --coverage \
            --passWithNoTests

      - name: Upload test coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: backend

  deploy:
    runs-on: ubuntu-latest
    needs: [lint, unit-testing]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Restore dependencies from cache
        id: cache
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-backend-yarn-${{ hashFiles(format('{0}{1}', github.workspace, 'yarn.lock')) }}
          restore-keys: |
            ${{ runner.os }}-backend-yarn-

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Deploy
        run: |
          yarn sls create_domain --stage dev
          yarn sls deploy --stage dev
